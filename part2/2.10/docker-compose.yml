version: "3.5"

services:

  db:
    image: postgres:13.2-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
    container_name: db_postgres
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - stack-network

  frontend:
    image: frontend
    ports:
      - 5000:5000
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080/
    networks:
      - stack-network
    command: ["serve", "-s", "-l", "5000", "build"]
    depends_on:
      - redis

  backend:
    image: backend
    ports:
      - 8080:8080
    environment:
      - REDIS_HOST=Redis
      - REQUEST_ORIGIN=http://localhost:5000
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_DATABASE=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - stack-network
    depends_on:
      - db
    command: ["./server"]

  redis:
    image: redis
    networks:
      - stack-network
    volumes:
      - ./data:/data

  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    environment:
      - NGINX_PORT=80
      - NGINX_HOST=http://localhost
    ports:
      - 80:80
    networks:
      - stack-network
    depends_on:
      - backend
      - frontend

networks:
  stack-network:
    name: stack-network

volumes:
  database:
  data: